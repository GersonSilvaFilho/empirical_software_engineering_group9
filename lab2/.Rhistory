x <- rep(0,5)
function(x){
x[0] <- x[0] + sample(1:5,1)
if(x[0]>15) return(x)
}
x
x <- function(x){
x[0] <- x[0] + sample(1:5,1)
if(x[0]>15) return(x)
}
x
sample.x <- function(x){
x[0] <- x[0] + sample(1:5,1)
if(x[0]>15) return(x)
}
x <- sample.x
random.sample <- function(x){
x[0] <- x[0] + sample(1:5,1)
if(x[0]>15) return(x)
}
random.sample(x)
x <- rep(0,5)
random.sample <- function(x){
x[0] <- x[0] + sample(1:5,1)
if(x[0]>15) return(x)
}
random.sample(x)
x <- rep(0,5)
random.sample <- function(x){
x[1] <- x[1] + sample(1:5,1)
if(x[1]>15) return(x)
}
random.sample(x)
x
scores <- rep(0,5)
random.sample <- function(x){
x[1] <- x[1] + sample(1:5,1)
if(x[1]>15) return(x)
}
random.sample(scores)
scores
scores <- random.sample(scores)
scores
scores <- rep(0,5)
random.sample <- function(x){
x[1] <- x[1] + sample(1:5,1)
if(x[1]>15) return(x)
}
scores <- random.sample(scores)
x[1] <- x[1] + sample(1:5,1)
x[1] <- x[1] + sample(1:5,1)
x[1] <- x[1] + sample(1:5,1)
x[1] <- x[1] + sample(1:5,1)
if(x[1]>15) return(x)
random.sample <- function(x){
x[1] <- x[1] + sample(1:5,1)
if(x[1]>15) return(x)
}
scores <- c(0,0,0,0,0)
random.sample <- function(x){
x[1] <- x[1] + sample(1:5,1)
if(x[1]>15) return(x)
}
scores <- random.sample(scores)
score <- 0
random.sample <- function(x){
x <- x + sample(1:5,1)
if(x>15) return(x)
}
scores <- random.sample(scores)
random.sample <- function(x){
x <- scores
x <- x + sample(1:5,1)
if(x>15) return(x)
}
scores <- random.sample(scores)
random.sample <- function(x) {
success <- FALSE
while (!success) {
# do something
i <- sample((1:5), 1)
x <- x + i
# check for success
success <- x > 0
}
return(x)
}
scores <- random.sample(scores)
df <- data.frame(Score=c(rep(0)))
df
df <- data.frame(Score=c(rep(0,5)))
df <- data.frame(Score=c(rep(0)))
x <- 0
repeat{
x = x + sample(1:5,1)
if(x>15)
break
}
x <- 0
repeat{
x = x + sample(1:5,1)
if(x>15)
break
}
x <- 0
repeat{
x = x + sample(1:5,1)
if(x>15)
break
}
x <- 0
repeat{
x = x + sample(1:5,1)
if(x>15)
break
}
x <- 0
repeat{
x = x + sample(1:5,1)
if(x=>15)
break
}
x <- 0
repeat{
x = x + sample(1:5,1)
if(x>=15)
break
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(x[1]>=15)
break
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(x[1]>=15)
break
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(x[:]>=15)
break
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
break
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
break
}
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
return(x)
}
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
return(x)
}
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
return(x)
}
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
return(x)
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
return(x)
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
return(x)
}
x <- c(0,0,0,0,0)
repeat{
x[1] = x[1] + sample(1:5,1)
x[2] = x[2] + sample(1:5,1)
x[3] = x[3] + sample(1:5,1)
x[4] = x[4] + sample(1:5,1)
x[5] = x[5] + sample(1:5,1)
if(any(x >= 15))
return(x)
}
library(tidyverse)
library(car)
library(knitr)
library(pwr)
library(psych)
library(rmarkdown)
library(zoom)
df3 <- read.csv(file = 'gotaflix-2wayANOVA.csv',sep = ",")
setwd("C:/Users/Anton/Desktop/MPSOF-1/Emperic/git/empirical_software_engineering_group9/lab2")
df3 <- read.csv(file = 'gotaflix-2wayANOVA.csv',sep = ",")
str(df3)
df3$Engagement <- as.numeric(df3$Engagement)
df3$Cover <- as.factor(df3$Cover)
df3$Summary <- as.factor(df3$Summary)
lm4 <- lm(Engagement ~ Cover + Summary + Cover:Summary, df3)
#
car::qqPlot(lm4)
zm()
sam <- sample(df3$Engagement,100)
plot(sam)
sam <- sample(df3,100)
sam <- sample(df3$Engagement,100)
plot(sam)
?plot
plot(sam,mean(sample))
plot(sam,mean(sam))
plot(sam)
?plot
plot(sam)
lines(mean(sam))
?plot
plot(sam)
abline(lm(sam))
lm(Engagement,sam)
sam$numbers <- c(1:100)
sam$Numbers <- c(1:100)
sam <- data.frame
sam$Engagement <- sample(df3$Engagement,100)
sam <- data.frame()
sam$Engagement <- sample(df3$Engagement,100)
car::leveneTest(lm4)
lm4 <- lm(Engagement ~ Cover + Summary + Cover:Summary, df3)
# The shapiro wilks test with W=0.999 with a p value of 0.3843, therefore we cannot reject the
# null hypothesis
shapiro.test(df3$Engagement)
car::leveneTest(lm4)
# Intercept for lm3 and lm4 is for factors Cover = Character and Summary = Character
lm3 <- lm(Engagement ~ Cover + Summary, df3)
car::leveneTest(lm3)
car::leveneTest(Engagement ~ Cover + Summary + Cover:Summary, df3)
car::leveneTest(Engagement ~ Cover + Summary + Cover:Summary)
car::leveneTest(Engagement ~ Cover*Summary ,df3)
lm4 <- lm(Engagement ~ Cover + Summary + Cover:Summary, df3)
lm5 <- lm(Engagement ~ Cover*Summary, df3)
lm4
lm5
car::leveneTest(Engagement ~ Cover*Summary ,df3)
# The levene test show us that we cannot reject homosce
car::leveneTest(lm5)
# The levene test show us that we cannot reject homosce
car::leveneTest(lm3)
# The levene test show us that we cannot reject homosce
car::leveneTest(lm5)
car::qqPlot(lm5$residuals)
zm()
car::qqPlot(sample(lm5$residuals,100))
zm()
anovatwoway <- car::Anova(lm5)
summary(anovatwoway)
tuk <- TukeyHSD(aov(lm5))
plot(tuk)
anovatwoway
tuk <- TukeyHSD(car::Anova(lm5))
tuk <- TukeyHSD(aov(lm5))
plot(tuk)
tuk
lm4
lm3
?pwr.anova.test
str(df3)
pwr.anova.test(k = 4, n = 800, f = NULL, sig.level = 0.05, power = 0.90)
install.packages("stargazer")
---
title: "Empirical software engineering"
subtitle: |
| Lab 2: ANOVA
| Group 9
output:
pdf_document
author:
- Anton Lutteman
- Daniel Olsson
- Gerson Silva Filho
- Johan Mejborn
date: "`r format(Sys.time(), '%d %B %Y')`"
---
library(stargazer)
# Exercise 1 - Time to Develop
library(stargazer)
stargazer::stargazer(lm5, header = F)
## d) ANOVA table
library(stargazer)
stargazer::stargazer(lm5, header = F)
?stargazer
---
title: "Empirical software engineering"
subtitle: |
| Lab 2: ANOVA
| Group 9
output:
pdf_document
author:
- Anton Lutteman
- Daniel Olsson
- Gerson Silva Filho
- Johan Mejborn
date: "`r format(Sys.time(), '%d %B %Y')`"
---
library(stargazer)
# Exercise 1 - Time to Develop
## a) Minimum amount of users
```{r 1_a}
pwr.anova.test(k = 5, n = NULL, f = 0.08, sig.level = 0.05, power = 0.90)
```
According to the ANOVA test the amount of users in each group is **483** for the
experiment have power 0.9. The minimum amount of monthly users that the company
must have is 2415, which is 5 (the number of groups) times the amount of users in
each group.
The effect size is inversely proportional to the number of users needed for the test.
If we accept a larger effect the number of users needed shrinks, with this
power and significance levels. On the other hand, if we make the effect
smaller we need a higher number of users to this significance level and power.
## b) Descriptive Statistics
```{r 1_b}
df <- read.csv(file = 'gotaflix-abn.csv',sep = ",")
df$Cover <- as.factor(df$Cover)
df$Engagement <- as.numeric(df$Engagement)
psych::describeBy(df$Engagement,list(df$Cover), mat=T)
```
## c) Linear Model
```{r 1_c}
lm <- lm(Engagement ~ Cover,df)
```
Equation that represents the model:
\begin{equation}
C = 1 -> 0.160367 + 0.017948
\end{equation}
The intercept, in this case, represents the **Cover A**.
If the the model gives only **Cover C** as 1, it means that it's the reference
for all the other covers.
## d) Normality
```{r 1_d_1}
car::qqPlot(Engagement ~ Cover,df)
```
With this plots is a bit hard to be sure about the normality, but there are no
reason to believe the opposite.
```{r 1_d_2}
car::qqPlot(lm$residuals)
```
Also the plot of the residuals look ok, but the data visualization is a bit hard.
```{r 1_d_3}
shapiro.test(df$Engagement)
```
Using the Shapiro Wilk test we can believe that the data follows a normal distribution
sing the W value is 1 and p-value is bigger than alpha.
## e) Scatter plot
```{r 1_e , fig.show="hold", out.width="50%"}
plot(lm)
Since the P-value is 0.93, it is larger than alpha and the null hypothesis can't be rejected.
## f) Independence Assumption
There is no test that can run to verify the independence of the data. It's part of
the design of the experiment and should be handled in the collection phase.
## g) Homoscedasticity analysis modified data - CHECK PLOT ARGUMENTS <<<<<<<<<<<<<<<<<
```{r 1_g , fig.show="hold", out.width="50%"}
plot(lm2)
car::leveneTest(lm2)
```
We interpret the null hypothesis of the test as being if the data have homoscedasticity.
Since the P-value is very small, and much smaller than alpha, the null hypothesis can be rejected
and we can say with confidence that the data **does not have homoscedasticity.**
## h) Which art cover had a better engagement?
```{r 1_h_1}
summary(lm)
car::Anova(lm)
```
The model is statistically significant and we reject the hypothesis that the mean is equal for all groups.
```{r 1_h_2}
tuk <- TukeyHSD(aov(lm))
plot(tuk)
```
We are confident that Cover C is better than A, B and D by looking at the plot of the Tukey test.
However, we can't say with confidence that C is better than E.
# Exercise 2 - Full Factorial Experiment
## a) Experimental Groups
## b) Linear model equation
## c) ANOVA assumptions
## d) ANOVA table
```{r star}
library(stargazer)
stargazer::stargazer(lm5, header = F)
```
render('lab2_report_group9.Rmd')
#a
# uncertain about the effect size
pwr.anova.test(k = 5, n = NULL, f = 0.08, sig.level = 0.05, power = 0.90)
df <- read.csv(file = 'gotaflix-abn.csv',sep = ",")
str(df)
df$Cover <- as.factor(df$Cover)
df$Engagement <- as.numeric(df$Engagement)
psych::describeBy(df$Engagement,list(df$Cover), mat=T)
lm <- lm(Engagement ~ Cover,df)
#d
car::qqPlot(Engagement ~ Cover,df)
car::qqPlot(lm$residuals)
shapiro.test(df$Engagement)
plot(lm)
df2$Engagement <- as.numeric(df2$Engagement)
lm2 <- lm(Engagement ~ Cover,df2)
plot(df2)
car::leveneTest(lm2)
#h
summary(lm)
lm2 <- lm(Engagement ~ Cover,df2)
#g
df2 <- read.csv(file = 'gotaflix-abn-modified.csv',sep = ",")
df2$Cover <- as.factor(df2$Cover)
df2$Engagement <- as.numeric(df2$Engagement)
lm2 <- lm(Engagement ~ Cover,df2)
plot(df2)
car::leveneTest(lm2)
#h
summary(lm)
car::Anova(lm)
tuk <- TukeyHSD(aov(lm))
plot(tuk)
df3 <- read.csv(file = 'gotaflix-2wayANOVA.csv',sep = ",")
str(df3)
df3$Engagement <- as.numeric(df3$Engagement)
df3$Cover <- as.factor(df3$Cover)
df3$Summary <- as.factor(df3$Summary)
# Intercept for lm3 and lm4 is for factors Cover = Character and Summary = Character
lm3 <- lm(Engagement ~ Cover + Summary, df3)
lm4 <- lm(Engagement ~ Cover + Summary + Cover:Summary, df3)
lm5 <- lm(Engagement ~ Cover*Summary, df3)
# The shapiro wilks test with W=0.999 with a p value of 0.3843, therefore we cannot reject the
# null hypothesis
shapiro.test(df3$Engagement)
# The results of the levene test tells us that we can reject the null hypothesis that the data is
# homoscedastic, however with large sample sizes the test is likely to report small p values for
# very small deviations from homoscedasticity. Instead we use qqPlot on the resiudals to inspect
# homoscedasticity. Our conclusion is that we cannot reject the hypothesis that the data is homoscedastic.
car::leveneTest(lm5)
car::qqPlot(sample(lm5$residuals,100))
anovatwoway <- car::Anova(lm5)
tuk <- TukeyHSD(aov(lm5))
plot(tuk)
# The effect size
pwr.anova.test(k = 4, n = 800, f = NULL, sig.level = 0.05, power = 0.90)
render('lab2_report_group9.Rmd')
render('lab2_report_group9.Rmd')
render('lab2_report_group9.Rmd')
render('lab2_report_group9.Rmd')
render('lab2_report_group9.Rmd')
render('lab2_report_group9.Rmd')
library(stargazer)
render('lab2_report_group9.Rmd')
render('lab2_report_group9.Rmd')
render('lab2_report_group9.Rmd')
